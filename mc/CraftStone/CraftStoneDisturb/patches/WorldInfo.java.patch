--- D:\CRAFTSTONE\DiffMakerPrivate\source\orig\net\minecraft\world\storage\WorldInfo.java	2014-11-28 15:11:16.000000000 +0100
+++ D:\CRAFTSTONE\DiffMakerPrivate\source\new\net\minecraft\world\storage\WorldInfo.java	2014-12-04 19:06:40.393320100 +0100
@@ -1,12 +1,18 @@
 package net.minecraft.world.storage;
 
 import java.util.concurrent.Callable;
+
+import com.craftstone.stone.event.weather.EnumWeather;
+import com.craftstone.stone.event.weather.RainChangeEvent;
+import com.craftstone.stone.event.weather.ThunderChangeEvent;
+
 import net.minecraft.crash.CrashReportCategory;
 import net.minecraft.nbt.NBTTagCompound;
 import net.minecraft.server.MinecraftServer;
 import net.minecraft.util.BlockPos;
 import net.minecraft.world.EnumDifficulty;
 import net.minecraft.world.GameRules;
+import net.minecraft.world.World;
 import net.minecraft.world.WorldSettings;
 import net.minecraft.world.WorldType;
 
@@ -49,8 +55,14 @@
    private int borderWarningDistance;
    private int borderWarningTime;
    private GameRules theGameRules;
-
-
+   
+   //CraftStone
+   private World world;
+   
+   public void setWorld(World world) {
+	   this.world = world;
+   }
+   
    protected WorldInfo() {
       this.terrainType = WorldType.DEFAULT;
       this.generatorOptions = "";
@@ -65,7 +77,7 @@
       this.borderWarningTime = 15;
       this.theGameRules = new GameRules();
    }
-
+   
    public WorldInfo(NBTTagCompound var1) {
       this.terrainType = WorldType.DEFAULT;
       this.generatorOptions = "";
@@ -399,8 +411,13 @@
       return this.thundering;
    }
 
-   public void setThundering(boolean var1) {
-      this.thundering = var1;
+   public void setThundering(boolean var1) { //CraftStone
+	   ThunderChangeEvent event = new ThunderChangeEvent(this.world, EnumWeather.getFromBoolean(var1));
+	   MinecraftServer mcServer = MinecraftServer.getServer();
+	   mcServer.callEvent(event);
+	   if (!event.wasCanclled()) {
+		      this.thundering = var1;
+	}
    }
 
    public int getThunderTime() {
@@ -415,8 +432,13 @@
       return this.raining;
    }
 
-   public void setRaining(boolean var1) {
-      this.raining = var1;
+   public void setRaining(boolean var1) { //CraftStone
+	  RainChangeEvent event = new RainChangeEvent(this.world, EnumWeather.getFromBoolean(var1));
+	  MinecraftServer mcServer = MinecraftServer.getServer();
+	  mcServer.callEvent(event);
+	  if (!event.wasCanclled()) {
+	      this.raining = var1;
+	  }
    }
 
    public int getRainTime() {
@@ -576,55 +598,31 @@
          public String call() {
             return String.valueOf(WorldInfo.this.getSeed());
          }
-         // $FF: synthetic method
-         public Object call() {
-            return this.call();
-         }
       });
       var1.addCrashSectionCallable("Level generator", new Callable() {
          public String call() {
             return String.format("ID %02d - %s, ver %d. Features enabled: %b", new Object[]{Integer.valueOf(WorldInfo.this.terrainType.getWorldTypeID()), WorldInfo.this.terrainType.getWorldTypeName(), Integer.valueOf(WorldInfo.this.terrainType.getGeneratorVersion()), Boolean.valueOf(WorldInfo.this.mapFeaturesEnabled)});
          }
-         // $FF: synthetic method
-         public Object call() {
-            return this.call();
-         }
       });
       var1.addCrashSectionCallable("Level generator options", new Callable() {
          public String call() {
             return WorldInfo.this.generatorOptions;
          }
-         // $FF: synthetic method
-         public Object call() {
-            return this.call();
-         }
       });
       var1.addCrashSectionCallable("Level spawn location", new Callable() {
          public String call() {
             return CrashReportCategory.getCoordinateInfo((double)WorldInfo.this.spawnX, (double)WorldInfo.this.spawnY, (double)WorldInfo.this.spawnZ);
          }
-         // $FF: synthetic method
-         public Object call() {
-            return this.call();
-         }
       });
       var1.addCrashSectionCallable("Level time", new Callable() {
          public String call() {
             return String.format("%d game time, %d day time", new Object[]{Long.valueOf(WorldInfo.this.totalTime), Long.valueOf(WorldInfo.this.worldTime)});
          }
-         // $FF: synthetic method
-         public Object call() {
-            return this.call();
-         }
       });
       var1.addCrashSectionCallable("Level dimension", new Callable() {
          public String call() {
             return String.valueOf(WorldInfo.this.dimension);
          }
-         // $FF: synthetic method
-         public Object call() {
-            return this.call();
-         }
       });
       var1.addCrashSectionCallable("Level storage version", new Callable() {
          public String call() {
@@ -644,29 +642,16 @@
 
             return String.format("0x%05X - %s", new Object[]{Integer.valueOf(WorldInfo.this.saveVersion), var1});
          }
-         // $FF: synthetic method
-         public Object call() {
-            return this.call();
-         }
       });
       var1.addCrashSectionCallable("Level weather", new Callable() {
          public String call() {
             return String.format("Rain time: %d (now: %b), thunder time: %d (now: %b)", new Object[]{Integer.valueOf(WorldInfo.this.rainTime), Boolean.valueOf(WorldInfo.this.raining), Integer.valueOf(WorldInfo.this.thunderTime), Boolean.valueOf(WorldInfo.this.thundering)});
          }
-         // $FF: synthetic method
-         public Object call() {
-            return this.call();
-         }
       });
       var1.addCrashSectionCallable("Level game mode", new Callable() {
          public String call() {
             return String.format("Game mode: %s (ID %d). Hardcore: %b. Cheats: %b", new Object[]{WorldInfo.this.theGameType.getName(), Integer.valueOf(WorldInfo.this.theGameType.getID()), Boolean.valueOf(WorldInfo.this.hardcore), Boolean.valueOf(WorldInfo.this.allowCommands)});
          }
-         // $FF: synthetic method
-         public Object call() {
-            return this.call();
-         }
       });
    }
-
-}
+}
\ No newline at end of file
