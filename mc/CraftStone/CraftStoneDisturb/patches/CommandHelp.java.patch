--- D:\CRAFTSTONE\DiffMakerPrivate\source\orig\net\minecraft\command\CommandHelp.java	2014-11-28 15:10:38.000000000 +0100
+++ D:\CRAFTSTONE\DiffMakerPrivate\source\new\net\minecraft\command\CommandHelp.java	2014-12-03 15:25:03.835313300 +0100
@@ -1,86 +1,127 @@
 package net.minecraft.command;
 
-import java.util.Arrays;
 import java.util.Collections;
 import java.util.List;
 import java.util.Map;
 import java.util.Set;
-import net.minecraft.command.CommandBase;
-import net.minecraft.command.CommandNotFoundException;
-import net.minecraft.command.ICommand;
-import net.minecraft.command.ICommandSender;
-import net.minecraft.command.NumberInvalidException;
-import net.minecraft.command.WrongUsageException;
+
 import net.minecraft.entity.player.EntityPlayer;
 import net.minecraft.event.ClickEvent;
 import net.minecraft.server.MinecraftServer;
 import net.minecraft.util.BlockPos;
+import net.minecraft.util.ChatComponentText;
 import net.minecraft.util.ChatComponentTranslation;
 import net.minecraft.util.EnumChatFormatting;
+import net.minecraft.util.IChatComponent;
 import net.minecraft.util.MathHelper;
 
-public class CommandHelp extends CommandBase {
+import com.craftstone.plugin.CraftPluginManager;
+import com.craftstone.stone.plugin.BasePlugin;
+import com.google.common.base.Optional;
+import com.google.common.collect.Lists;
+import com.google.common.collect.Maps;
 
+public class CommandHelp extends CommandBase {
+	private static final int COMMAND_ON_PAGE = 7; //CraftStone
+	
+	
    public String getCommandName() {
       return "help";
    }
 
-   public int getRequiredPermissionLevel() {
-      return 0;
-   }
-
    public String getCommandUsage(ICommandSender var1) {
       return "commands.help.usage";
    }
 
-   public List getCommandAliases() {
-      return Arrays.asList(new String[]{"?"});
+   public String[] getCommandAliases() { //CraftStone
+      return new String[]{"?"};
    }
-
-   public void processCommand(ICommandSender var1, String[] var2) {
-      List var3 = this.getSortedPossibleCommands(var1);
-      boolean var4 = true;
-      int var5 = (var3.size() - 1) / 7;
-      boolean var6 = false;
-
-      int var13;
-      try {
-         var13 = var2.length == 0?0:parseInt(var2[0], 1, var5 + 1) - 1;
-      } catch (NumberInvalidException var12) {
-         Map var8 = this.getCommands();
-         ICommand var9 = (ICommand)var8.get(var2[0]);
-         if(var9 != null) {
-            throw new WrongUsageException(var9.getCommandUsage(var1), new Object[0]);
-         }
-
-         if(MathHelper.parseIntWithDefault(var2[0], -1) != -1) {
-            throw var12;
-         }
-
-         throw new CommandNotFoundException();
-      }
-
-      int var7 = Math.min((var13 + 1) * 7, var3.size());
-      ChatComponentTranslation var14 = new ChatComponentTranslation("commands.help.header", new Object[]{Integer.valueOf(var13 + 1), Integer.valueOf(var5 + 1)});
-      var14.getChatStyle().setColor(EnumChatFormatting.DARK_GREEN);
-      var1.addChatMessage(var14);
-
-      for(int var15 = var13 * 7; var15 < var7; ++var15) {
-         ICommand var10 = (ICommand)var3.get(var15);
-         ChatComponentTranslation var11 = new ChatComponentTranslation(var10.getCommandUsage(var1), new Object[0]);
-         var11.getChatStyle().setChatClickEvent(new ClickEvent(ClickEvent.Action.SUGGEST_COMMAND, "/" + var10.getCommandName() + " "));
-         var1.addChatMessage(var11);
-      }
-
-      if(var13 == 0 && var1 instanceof EntityPlayer) {
-         ChatComponentTranslation var16 = new ChatComponentTranslation("commands.help.footer", new Object[0]);
-         var16.getChatStyle().setColor(EnumChatFormatting.GREEN);
-         var1.addChatMessage(var16);
-      }
-
+   
+   public void processCommand(ICommandSender var1, String[] var2) throws CommandNotFoundException, WrongUsageException, NumberInvalidException { //CraftStone category help
+	   CraftPluginManager manager = (CraftPluginManager)MinecraftServer.getServer().getPluginManager();
+	   
+	   boolean isAll = true;
+	   String plugin = null;
+	   
+	   if (var2.length > 1) {
+		   isAll = false;
+		   plugin = var2[1];
+	   }
+	   
+	   List<CommandBase> list = this.getSortedPossibleCommands(var1);
+	   	List var3 = Lists.newArrayList();
+	   	
+	   	if (isAll) {
+	   		var3 = list;
+	   	} else {
+	   		if (plugin.equals("Minecraft")) {
+	   			for (CommandBase command : list) {
+	   				if (command.isVanillaCommand()) {
+	   					var3.add(command);
+	   				}
+	   			}
+	   		} else if (plugin.equals("Stone")) {
+	   			for (CommandBase command : list) {
+	   				if (!command.isVanillaCommand() && manager.getCommandOwner(command.getCommandName()) == null) {
+	   					var3.add(command);
+	   				}
+	   			}
+	   		} else {
+	   			for (CommandBase command : list) {
+	   				if (plugin.equals(manager.getCommandOwner(command.getCommandName()))) {
+	   					var3.add(command);
+	   				}
+	   			}
+	   		}
+	   	}
+	   	
+	   
+	      boolean var4 = true;
+	      int var5 = (var3.size() - 1) / 7;
+	      boolean var6 = false;
+
+	      int var13;
+	      try {
+	         var13 = var2.length == 0?0:parseInt(var2[0], 1, var5 + 1) - 1;
+	      } catch (NumberInvalidException var12) {
+	         Map var8 = this.getCommands();
+	         ICommand var9 = (ICommand)var8.get(var2[0]);
+	         if(var9 != null) {
+	            throw new WrongUsageException(var9.getCommandUsage(var1), new Object[0]);
+	         }
+
+	         if(MathHelper.parseIntWithDefault(var2[0], -1) != -1) {
+	            throw var12;
+	         }
+
+	         throw new CommandNotFoundException();
+	      }
+
+	      //CraftStone
+	      if (plugin == null) {
+	    	  plugin = "all";
+	      }
+	      
+	      int var7 = Math.min((var13 + 1) * 7, var3.size());
+	      ChatComponentText var14 = new ChatComponentText("-- Showing help page " + Integer.valueOf(var13 + 1) + " of " + Integer.valueOf(var5 + 1) + " for " + plugin + " (/help <page> [plugin]) --");
+	      var14.getChatStyle().setColor(EnumChatFormatting.GOLD);
+	      var1.addChatMessage(var14);
+
+	      for(int var15 = var13 * 7; var15 < var7; ++var15) {
+		    	  CommandBase var10 = (CommandBase)var3.get(var15);
+			         ChatComponentText var11 = new ChatComponentText(new ChatComponentTranslation(var10.getCommandUsage(var1), new Object[0]).getUnformattedTextForChat() + ": " + var10.getDescription());
+			         var11.getChatStyle().setChatClickEvent(new ClickEvent(ClickEvent.Action.SUGGEST_COMMAND, "/" + var10.getCommandName() + " "));
+			         var1.addChatMessage(var11);
+	      }
+
+	      if(var13 == 0 && var1 instanceof EntityPlayer) {
+	         ChatComponentTranslation var16 = new ChatComponentTranslation("commands.help.footer", new Object[0]);
+	         var16.getChatStyle().setColor(EnumChatFormatting.BLUE);
+	         var1.addChatMessage(var16);
+	      }
    }
 
-   protected List getSortedPossibleCommands(ICommandSender var1) {
+   protected List<CommandBase> getSortedPossibleCommands(ICommandSender var1) { //CraftStone
       List var2 = MinecraftServer.getServer().getCommandManager().getPossibleCommands(var1);
       Collections.sort(var2);
       return var2;
