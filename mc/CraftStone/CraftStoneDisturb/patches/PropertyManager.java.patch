--- D:\CRAFTSTONE\DiffMakerPrivate\source\orig\net\minecraft\server\dedicated\PropertyManager.java	2014-11-28 15:11:00.000000000 +0100
+++ D:\CRAFTSTONE\DiffMakerPrivate\source\new\net\minecraft\server\dedicated\PropertyManager.java	2014-11-28 16:57:15.065106000 +0100
@@ -1,73 +1,71 @@
 package net.minecraft.server.dedicated;
 
 import java.io.File;
-import java.io.FileInputStream;
-import java.io.FileOutputStream;
 import java.io.IOException;
-import java.util.Properties;
+
+import org.apache.commons.configuration.ConfigurationException;
+import org.apache.commons.configuration.XMLConfiguration;
+import org.apache.commons.io.FileUtils;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
 public class PropertyManager {
 
    private static final Logger LOGGER = LogManager.getLogger();
-   private final Properties serverProperties = new Properties();
+   private XMLConfiguration serverProperties; //CraftStone changed to use XMLConfiguration
    private final File serverPropertiesFile;
 
 
    public PropertyManager(File var1) {
+	  //CraftStone start
       this.serverPropertiesFile = var1;
       if(var1.exists()) {
-         FileInputStream var2 = null;
-
          try {
-            var2 = new FileInputStream(var1);
-            this.serverProperties.load(var2);
+        	 this.serverProperties = new XMLConfiguration(var1);
          } catch (Exception var12) {
             LOGGER.warn("Failed to load " + var1, var12);
             this.generateNewProperties();
-         } finally {
-            if(var2 != null) {
-               try {
-                  var2.close();
-               } catch (IOException var11) {
-                  ;
-               }
-            }
-
-         }
+         } 
       } else {
          LOGGER.warn(var1 + " does not exist");
          this.generateNewProperties();
+         try {
+			this.serverProperties = new XMLConfiguration(var1);
+		} catch (ConfigurationException e) {
+			e.printStackTrace();
+		}
       }
-
+    //CraftStone end
    }
 
    public void generateNewProperties() {
       LOGGER.info("Generating new properties file");
-      this.saveProperties();
+      //CraftStone start
+      try {
+    	  this.serverPropertiesFile.delete();
+			this.serverPropertiesFile.createNewFile();
+		} catch (IOException e) {
+			e.printStackTrace();
+		}
+      String defaultProperties = "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><config></config>";
+      try {
+		FileUtils.writeStringToFile(serverPropertiesFile, defaultProperties);
+	} catch (IOException e) {
+		e.printStackTrace();
+	}
+    //CraftStone end
    }
 
    public void saveProperties() {
-      FileOutputStream var1 = null;
 
+   	//CraftStone start
       try {
-         var1 = new FileOutputStream(this.serverPropertiesFile);
-         this.serverProperties.store(var1, "Minecraft server properties");
+         this.serverProperties.save();
       } catch (Exception var11) {
          LOGGER.warn("Failed to save " + this.serverPropertiesFile, var11);
          this.generateNewProperties();
-      } finally {
-         if(var1 != null) {
-            try {
-               var1.close();
-            } catch (IOException var10) {
-               ;
-            }
-         }
-
       }
-
+    //McServerMod end
    }
 
    public File getPropertiesFile() {
@@ -81,7 +79,7 @@
          this.saveProperties();
       }
 
-      return this.serverProperties.getProperty(var1, var2);
+      return this.serverProperties.getString(var1, var2);
    }
 
    public int getIntProperty(String var1, int var2) {
