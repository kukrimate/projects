#!/bin/bash

error_trap()
{
	echo $TRAP_MSG 1>&2
	exit 1
}

is_defined()
{
    declare -f -F $1 > /dev/null
    return $?
}

# Check if we running as root
if [ $UID -eq 0 ]; then
	echo 'Never run mkpkg as root !!!' 1>&2
	exit 1
fi

# Source config
trap error_trap ERR
TRAP_MSG="Syntax error in config file"
source "/usr/local/etc/mkpkg.conf"

TRAP_MSG="Something unexpected went wrong"

SRC_DIR=$PWD
DO_CLEANUP=0
SRC_CLEANUP=0
for arg in "$@"; do
case $arg in
	-d=*|--dir=*)
	SRC_DIR=${arg#*=}
	;;
	-c|--cleanup)
	DO_CLEANUP=1
	;;
esac
done

# Check for pkgdef file
if [ ! -f "$SRC_DIR/pkgdef" ]; then
	echo "pkgdef not found" 1>&2
	exit 1
fi
SRC_DIR=$(readlink -e "$SRC_DIR")

# Source package definition
PKGDEF_PATH="$SRC_DIR/pkgdef"
TRAP_MSG="Syntax error in $PKGDEF_PATH"
source $PKGDEF_PATH

# Create source directory
TRAP_MSG="Failed to create tarball unpack directory"
UNPACK_DIR="$SRC_DIR/unpack"
mkdir -p $UNPACK_DIR

# Download sources
tput setaf 2; echo "[mkpkg] Preparing sources"; tput sgr 0

for src in ${pkg_src[@]}; do
	FILENAME="${src##*/}"
	FILEPATH="$SRC_DIR/$FILENAME"

	# Download online sources
	if [ -f $FILEPATH ]; then
		# TODO: add hash check for file integrity
		true
	elif [[ $src =~ (^https|^http|^ftp):// ]]; then
		TRAP_MSG="Failed to download $FILENAME"
		wget -O $FILEPATH $src
	else
		echo "Local source file $FILEPATH doesn't exist" 1>&2
		exit 1
	fi

	# Extract it
	if [[ $FILENAME =~ \.tar\..*$ ]]; then
		TRAP_MSG="Failed to unpack $FILENAME"
		cd $UNPACK_DIR
		tar xf $FILEPATH
	fi
done

# Call prepare
if is_defined prepare; then
	tput setaf 2; echo "[mkpkg] Running prepare"; tput sgr 0
	TRAP_MSG="$(tput setaf 1)Prepare failed$(tput sgr 0)"
	
	cd $UNPACK_DIR
	prepare > /dev/null
fi

# Call build


if is_defined build; then
	TRAP_MSG="Failed to create build directory"
	BUILD_DIR="$SRC_DIR/build"
	mkdir -p $BUILD_DIR

	tput setaf 2; echo "[mkpkg] Running build"; tput sgr 0
	TRAP_MSG="$(tput setaf 1)Build failed$(tput sgr 0)"
	
	cd $BUILD_DIR
	build > /dev/null
fi

# Create an archive
create_archive()
{
	# Set error message
	TRAP_MSG="$(tput setaf 1)$1 failed$(tput sgr 0)"

	archive_suffix=${1##*_}
	tput setaf 2; echo "[mkpkg] Creating archive: $archive_suffix"; tput sgr 0

	# Create archive directory
	ARCHIVE_DIR="$SRC_DIR/archive/$archive_suffix"
	mkdir -p $ARCHIVE_DIR

	# Run archive function
	cd $BUILD_DIR
	$1 > /dev/null

	cd $ARCHIVE_DIR
	tar czf "$SRC_DIR/$pkg_name-$pkg_ver-$archive_suffix.tgz" .
}

# Create archives
OLDIFS=$IFS
IFS=$'\n'
for arc in $(declare -F | grep "package_.*"); do
	create_archive "$(echo $arc | cut -d " " -f 3)"
done
IFS=$OLDIFS

if [ $DO_CLEANUP -eq 1 ]; then
	TRAP_MSG="Cleanup failed"
	rm -rf "$SRC_DIR/archive" "$SRC_DIR/unpack" "$SRC_DIR/build"
fi
